@model RecipeBookMVC.Models.RecipeDetails
@* ^^^ FIX: Added the fully qualified namespace here ^^^ *@

@{
    ViewBag.Title = Model.title;
}

<div class="recipe-detail">
    <div class="header-container">
        <h1>@Model.title</h1>

        @* The Like Button functionality depends on the Recipe Model, not the Detailed Model.
            We use the base properties available in RecipeDetails. *@
        <button type="button" class="btn btn-like btn-like-large"
                onclick="likeRecipe(@Model.id,
                                   '@Model.title.Replace("'", "\\'")',
                                   '@Model.image',
                                   @Model.vegetarian.ToString().ToLower(),
                                   this)">
            Like ❤️
        </button>
    </div>

    <img src="@Model.image" alt="@Model.title" class="recipe-image-large"
         onerror="this.onerror=null; this.src='https://placehold.co/800x400/cccccc/333333?text=Image+Not+Available';" />

    <p class="diet-label">
        @(Model.vegetarian ? "🌱 Vegetarian" : "🥩 Non-Vegetarian")
    </p>

    <h2>Summary</h2>
    <div class="recipe-summary">
        @Html.Raw(Model.summary)
    </div>

    @if (Model.extendedIngredients != null && Model.extendedIngredients.Any())
    {
        <h2>Ingredients</h2>
        <ul class="recipe-ingredients">
            @foreach (var ingredient in Model.extendedIngredients)
            {
                <li>@ingredient.original</li>
            }
        </ul>
    }

    @if (Model.analyzedInstructions != null && Model.analyzedInstructions.Any())
    {
        <h2>Instructions</h2>
       
        if (Model.analyzedInstructions.First().steps != null)
        {
            <ol class="recipe-instructions">
                @foreach (var step in Model.analyzedInstructions.First().steps)
                {
                    <li>@step.step</li>
                }
            </ol>
        }
        else
        {
            <p>No detailed steps available for this recipe.</p>
        }
    }
    else
    {
        <h2>Instructions</h2>
        @* The logic for 'Model.instructions' was failing compilation because the property is missing from the C# model.
            Temporarily reverting to a simple message to allow the view to compile.
            This is the section that was fixed. *@
        <p>No instructions available for this recipe.</p>
    }
</div>

@section scripts {
    @* The necessary likeRecipe JavaScript function must be defined in _Layout.cshtml or Index.cshtml and included here.
        Assuming it is available via the layout or a referenced script file. *@
}
